{\rtf1\ansi\ansicpg1252\cocoartf2758
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red157\green0\blue210;\red245\green245\blue245;\red0\green0\blue0;
\red15\green112\blue1;\red144\green1\blue18;\red19\green85\blue52;\red0\green0\blue255;\red101\green76\blue29;
\red0\green0\blue109;\red31\green99\blue128;}
{\*\expandedcolortbl;;\cssrgb\c68627\c0\c85882;\cssrgb\c96863\c96863\c96863;\cssrgb\c0\c0\c0;
\cssrgb\c0\c50196\c0;\cssrgb\c63922\c8235\c8235;\cssrgb\c6667\c40000\c26667;\cssrgb\c0\c0\c100000;\cssrgb\c47451\c36863\c14902;
\cssrgb\c0\c6275\c50196;\cssrgb\c14510\c46275\c57647;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 import\cf0 \strokec4  random\cb1 \
\
\cf2 \cb3 \strokec2 import\cf0 \strokec4  hashlib\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 # User data (for testing purposes only)\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb3 users = \{\cb1 \
\cb3     \cf6 \strokec6 "A"\cf0 \strokec4 : \{\cb1 \
\cb3         \cf6 \strokec6 "password"\cf0 \strokec4 : \cf6 \strokec6 "12341234"\cf0 \strokec4 ,\cb1 \
\cb3         \cf6 \strokec6 "role"\cf0 \strokec4 : \cf6 \strokec6 "admin"\cf0 \cb1 \strokec4 \
\cb3     \},\cb1 \
\cb3     \cf6 \strokec6 "B"\cf0 \strokec4 : \{\cb1 \
\cb3         \cf6 \strokec6 "password"\cf0 \strokec4 : \cf6 \strokec6 "112233"\cf0 \strokec4 ,\cb1 \
\cb3         \cf6 \strokec6 "role"\cf0 \strokec4 : \cf6 \strokec6 "customer"\cf0 \cb1 \strokec4 \
\cb3     \}\cb1 \
\cb3 \}\cb1 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 # Initialize list of available products\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb3 products =[\cb1 \
\cb3     \{\cf6 \strokec6 "name"\cf0 \strokec4 : \cf6 \strokec6 "rice"\cf0 \strokec4 , \cf6 \strokec6 "price"\cf0 \strokec4 : \cf7 \strokec7 10\cf0 \strokec4 , \cf6 \strokec6 "quantity"\cf0 \strokec4 : \cf7 \strokec7 10\cf0 \strokec4 \},\cb1 \
\cb3     \{\cf6 \strokec6 "name"\cf0 \strokec4 : \cf6 \strokec6 "Apples"\cf0 \strokec4 , \cf6 \strokec6 "price"\cf0 \strokec4 : \cf7 \strokec7 1.5\cf0 \strokec4 , \cf6 \strokec6 "quantity"\cf0 \strokec4 : \cf7 \strokec7 20\cf0 \strokec4 \},\cb1 \
\cb3     \{\cf6 \strokec6 "name"\cf0 \strokec4 : \cf6 \strokec6 "candy"\cf0 \strokec4 , \cf6 \strokec6 "price"\cf0 \strokec4 : \cf7 \strokec7 3\cf0 \strokec4 , \cf6 \strokec6 "quantity"\cf0 \strokec4 : \cf7 \strokec7 15\cf0 \strokec4 \},\cb1 \
\
\cb3 ]\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 # Encryption function\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf8 \cb3 \strokec8 def\cf0 \strokec4  \cf9 \strokec9 encrypt_data\cf0 \strokec4 (\cf10 \strokec10 data\cf0 \strokec4 ):\cb1 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb3     \cf6 \strokec6 """\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf6 \cb3 \strokec6     Encrypts data using SHA256 hash algorithm.\cf0 \cb1 \strokec4 \
\cf6 \cb3 \strokec6     """\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb3     hashed_data = hashlib.sha256(data.encode()).hexdigest()\cb1 \
\cb3     \cf2 \strokec2 return\cf0 \strokec4  hashed_data\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 # Authentication function\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf8 \cb3 \strokec8 def\cf0 \strokec4  \cf9 \strokec9 authenticate_user\cf0 \strokec4 (\cf10 \strokec10 username\cf0 \strokec4 , \cf10 \strokec10 password\cf0 \strokec4 ):\cb1 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb3     \cf6 \strokec6 """\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf6 \cb3 \strokec6     Authenticates user based on username and password.\cf0 \cb1 \strokec4 \
\cf6 \cb3 \strokec6     """\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb3     \cf2 \strokec2 if\cf0 \strokec4  username \cf8 \strokec8 in\cf0 \strokec4  users:\cb1 \
\cb3         \cf2 \strokec2 if\cf0 \strokec4  encrypt_data(password) == encrypt_data(users[username][\cf6 \strokec6 "password"\cf0 \strokec4 ]):\cb1 \
\cb3             \cf2 \strokec2 return\cf0 \strokec4  \cf8 \strokec8 True\cf0 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 return\cf0 \strokec4  \cf8 \strokec8 False\cf0 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 # Authorization function\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf8 \cb3 \strokec8 def\cf0 \strokec4  \cf9 \strokec9 authorize_user\cf0 \strokec4 (\cf10 \strokec10 username\cf0 \strokec4 , \cf10 \strokec10 action\cf0 \strokec4 ):\cb1 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb3     \cf6 \strokec6 """\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf6 \cb3 \strokec6     Authorizes user based on username and action.\cf0 \cb1 \strokec4 \
\cf6 \cb3 \strokec6     """\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb3     \cf2 \strokec2 if\cf0 \strokec4  username \cf8 \strokec8 in\cf0 \strokec4  users:\cb1 \
\cb3         \cf2 \strokec2 if\cf0 \strokec4  action == \cf6 \strokec6 "read"\cf0 \strokec4  \cf8 \strokec8 and\cf0 \strokec4  users[username][\cf6 \strokec6 "role"\cf0 \strokec4 ] == \cf6 \strokec6 "admin"\cf0 \strokec4 :\cb1 \
\cb3             \cf2 \strokec2 return\cf0 \strokec4  \cf8 \strokec8 True\cf0 \cb1 \strokec4 \
\cb3         \cf2 \strokec2 elif\cf0 \strokec4  action == \cf6 \strokec6 "write"\cf0 \strokec4  \cf8 \strokec8 and\cf0 \strokec4  users[username][\cf6 \strokec6 "role"\cf0 \strokec4 ] == \cf6 \strokec6 "admin"\cf0 \strokec4 :\cb1 \
\cb3             \cf2 \strokec2 return\cf0 \strokec4  \cf8 \strokec8 True\cf0 \cb1 \strokec4 \
\cb3         \cf2 \strokec2 elif\cf0 \strokec4  action == \cf6 \strokec6 "read"\cf0 \strokec4  \cf8 \strokec8 and\cf0 \strokec4  users[username][\cf6 \strokec6 "role"\cf0 \strokec4 ] == \cf6 \strokec6 "customer"\cf0 \strokec4 :\cb1 \
\cb3             \cf2 \strokec2 return\cf0 \strokec4  \cf8 \strokec8 True\cf0 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 return\cf0 \strokec4  \cf8 \strokec8 False\cf0 \cb1 \strokec4 \
\
\
\
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 # Define function to calculate total price of items in cart\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf8 \cb3 \strokec8 def\cf0 \strokec4  \cf9 \strokec9 calculate_total\cf0 \strokec4 (\cf10 \strokec10 cart\cf0 \strokec4 ):\cb1 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb3     total = \cf7 \strokec7 0\cf0 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 for\cf0 \strokec4  item \cf8 \strokec8 in\cf0 \strokec4  cart:\cb1 \
\cb3         total += item[\cf6 \strokec6 "price"\cf0 \strokec4 ] * item[\cf6 \strokec6 "quantity"\cf0 \strokec4 ]\cb1 \
\cb3     \cf2 \strokec2 return\cf0 \strokec4  total\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 # Define function to generate order ID\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf8 \cb3 \strokec8 def\cf0 \strokec4  \cf9 \strokec9 generate_order_id\cf0 \strokec4 ():\cb1 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb3     \cf2 \strokec2 return\cf0 \strokec4  \cf11 \strokec11 str\cf0 \strokec4 (random.randint(\cf7 \strokec7 10000\cf0 \strokec4 , \cf7 \strokec7 99999\cf0 \strokec4 ))\cb1 \
\
\
\
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 # Define main function to handle user interaction\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf8 \cb3 \strokec8 def\cf0 \strokec4  \cf9 \strokec9 main\cf0 \strokec4 ():\cb1 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb3     \cf5 \strokec5 # Authenticate user\cf0 \cb1 \strokec4 \
\cb3    \cf5 \strokec5 # Testing the functions\cf0 \cb1 \strokec4 \
\cb3     username = \cf9 \strokec9 input\cf0 \strokec4 (\cf6 \strokec6 "Enter username: "\cf0 \strokec4 )\cb1 \
\cb3     password = \cf9 \strokec9 input\cf0 \strokec4 (\cf6 \strokec6 "Enter password: "\cf0 \strokec4 )\cb1 \
\cb3     action = \cf9 \strokec9 input\cf0 \strokec4 (\cf6 \strokec6 "Enter action (read/write): "\cf0 \strokec4 )\cb1 \
\
\cb3     \cf2 \strokec2 if\cf0 \strokec4  authenticate_user(username, password):\cb1 \
\cb3         \cf2 \strokec2 if\cf0 \strokec4  authorize_user(username, action):\cb1 \
\cb3          \cf9 \strokec9 print\cf0 \strokec4 (\cf6 \strokec6 "User authorized to perform action"\cf0 \strokec4 )\cb1 \
\cb3         \cf2 \strokec2 else\cf0 \strokec4 :\cb1 \
\cb3             \cf9 \strokec9 print\cf0 \strokec4 (\cf6 \strokec6 "User not authorized to perform action"\cf0 \strokec4 )\cb1 \
\cb3     \cf2 \strokec2 else\cf0 \strokec4 :\cb1 \
\cb3         \cf9 \strokec9 print\cf0 \strokec4 (\cf6 \strokec6 "Authentication failed"\cf0 \strokec4 )\cb1 \
\cb3         \cf2 \strokec2 if\cf0 \strokec4  \cf8 \strokec8 not\cf0 \strokec4  authenticate_user(username, password):\cb1 \
\cb3             \cf9 \strokec9 print\cf0 \strokec4 (\cf6 \strokec6 "Invalid username or password"\cf0 \strokec4 )\cb1 \
\cb3             \cf2 \strokec2 return\cf0 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 # Display available products\cf0 \cb1 \strokec4 \
\cb3     \cf9 \strokec9 print\cf0 \strokec4 (\cf6 \strokec6 "Available products:"\cf0 \strokec4 )\cb1 \
\cb3     \cf2 \strokec2 for\cf0 \strokec4  i, product \cf8 \strokec8 in\cf0 \strokec4  \cf9 \strokec9 enumerate\cf0 \strokec4 (products):\cb1 \
\cb3         \cf9 \strokec9 print\cf0 \strokec4 (\cf8 \strokec8 f\cf6 \strokec6 "\cf0 \strokec4 \{i+\cf7 \strokec7 1\cf0 \strokec4 \}\cf6 \strokec6 . \cf0 \strokec4 \{product[\cf6 \strokec6 'name'\cf0 \strokec4 ]\}\cf6 \strokec6  - $\cf0 \strokec4 \{product[\cf6 \strokec6 'price'\cf0 \strokec4 ]\}\cf6 \strokec6 "\cf0 \strokec4 )\cb1 \
\
\cb3     \cf5 \strokec5 # Get user input for product selection\cf0 \cb1 \strokec4 \
\cb3     selection = \cf9 \strokec9 input\cf0 \strokec4 (\cf6 \strokec6 "Select a product (1-3): "\cf0 \strokec4 )\cb1 \
\cb3     \cf2 \strokec2 if\cf0 \strokec4  \cf8 \strokec8 not\cf0 \strokec4  selection.isdigit() \cf8 \strokec8 or\cf0 \strokec4  \cf11 \strokec11 int\cf0 \strokec4 (selection) < \cf7 \strokec7 1\cf0 \strokec4  \cf8 \strokec8 or\cf0 \strokec4  \cf11 \strokec11 int\cf0 \strokec4 (selection) > \cf7 \strokec7 3\cf0 \strokec4 :\cb1 \
\cb3         \cf9 \strokec9 print\cf0 \strokec4 (\cf6 \strokec6 "Invalid selection"\cf0 \strokec4 )\cb1 \
\cb3         \cf2 \strokec2 return\cf0 \cb1 \strokec4 \
\cb3     selection = \cf11 \strokec11 int\cf0 \strokec4 (selection)\cb1 \
\
\cb3     \cf5 \strokec5 # Get user input for quantity\cf0 \cb1 \strokec4 \
\cb3     quantity = \cf9 \strokec9 input\cf0 \strokec4 (\cf6 \strokec6 "Enter quantity: "\cf0 \strokec4 )\cb1 \
\cb3     \cf2 \strokec2 if\cf0 \strokec4  \cf8 \strokec8 not\cf0 \strokec4  quantity.isdigit() \cf8 \strokec8 or\cf0 \strokec4  \cf11 \strokec11 int\cf0 \strokec4 (quantity) < \cf7 \strokec7 1\cf0 \strokec4 :\cb1 \
\cb3         \cf9 \strokec9 print\cf0 \strokec4 (\cf6 \strokec6 "Invalid quantity"\cf0 \strokec4 )\cb1 \
\cb3         \cf2 \strokec2 return\cf0 \cb1 \strokec4 \
\cb3     quantity = \cf11 \strokec11 int\cf0 \strokec4 (quantity)\cb1 \
\
\cb3     \cf5 \strokec5 # Check if product is in stock\cf0 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 if\cf0 \strokec4  quantity > products[selection\cf7 \strokec7 -1\cf0 \strokec4 ][\cf6 \strokec6 "quantity"\cf0 \strokec4 ]:\cb1 \
\cb3         \cf9 \strokec9 print\cf0 \strokec4 (\cf6 \strokec6 "Not enough stock"\cf0 \strokec4 )\cb1 \
\cb3         \cf2 \strokec2 return\cf0 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 # Add item to cart\cf0 \cb1 \strokec4 \
\cb3     cart = [\{\cf6 \strokec6 "name"\cf0 \strokec4 : products[selection\cf7 \strokec7 -1\cf0 \strokec4 ][\cf6 \strokec6 "name"\cf0 \strokec4 ], \cf6 \strokec6 "price"\cf0 \strokec4 : products[selection\cf7 \strokec7 -1\cf0 \strokec4 ][\cf6 \strokec6 "price"\cf0 \strokec4 ], \cf6 \strokec6 "quantity"\cf0 \strokec4 : quantity\}]\cb1 \
\cb3     \cf9 \strokec9 print\cf0 \strokec4 (\cf6 \strokec6 "Item added to cart"\cf0 \strokec4 )\cb1 \
\
\cb3     \cf5 \strokec5 # Calculate total price\cf0 \cb1 \strokec4 \
\cb3     total = calculate_total(cart)\cb1 \
\cb3     \cf9 \strokec9 print\cf0 \strokec4 (\cf8 \strokec8 f\cf6 \strokec6 "Total price: $\cf0 \strokec4 \{total\}\cf6 \strokec6 "\cf0 \strokec4 )\cb1 \
\
\cb3     \cf5 \strokec5 # Generate order ID\cf0 \cb1 \strokec4 \
\cb3     order_id = generate_order_id()\cb1 \
\cb3     \cf9 \strokec9 print\cf0 \strokec4 (\cf8 \strokec8 f\cf6 \strokec6 "Order ID: \cf0 \strokec4 \{order_id\}\cf6 \strokec6 "\cf0 \strokec4 )\cb1 \
\
\cb3     \cf5 \strokec5 # Encrypt sensitive data\cf0 \cb1 \strokec4 \
\cb3     encrypted_data = encrypt_data(\cf8 \strokec8 f\cf6 \strokec6 "\cf0 \strokec4 \{username\}\cf6 \strokec6 _\cf0 \strokec4 \{password\}\cf6 \strokec6 _\cf0 \strokec4 \{order_id\}\cf6 \strokec6 _\cf0 \strokec4 \{total\}\cf6 \strokec6 "\cf0 \strokec4 )\cb1 \
\cb3     \cf9 \strokec9 print\cf0 \strokec4 (\cf8 \strokec8 f\cf6 \strokec6 "Encrypted data: \cf0 \strokec4 \{encrypted_data\}\cf6 \strokec6 "\cf0 \strokec4 )\cb1 \
\
\cb3     \cf5 \strokec5 # Authorize user for checkout\cf0 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 if\cf0 \strokec4  authorize_user(username, action):\cb1 \
\cb3          \cf5 \strokec5 # Process payment and update inventory\cf0 \cb1 \strokec4 \
\cb3         \cf9 \strokec9 print\cf0 \strokec4 (\cf6 \strokec6 "Payment processed"\cf0 \strokec4 )\cb1 \
\cb3         products[selection\cf7 \strokec7 -1\cf0 \strokec4 ][\cf6 \strokec6 "quantity"\cf0 \strokec4 ] -= quantity\cb1 \
\cb3     \cf2 \strokec2 else\cf0 \strokec4 :\cb1 \
\cb3         \cf9 \strokec9 print\cf0 \strokec4 (\cf6 \strokec6 "Not authorized to checkout"\cf0 \strokec4 )\cb1 \
\cb3         \cf2 \strokec2 return\cf0 \cb1 \strokec4 \
\
\
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 if\cf0 \strokec4  \cf10 \strokec10 __name__\cf0 \strokec4  == \cf6 \strokec6 "__main__"\cf0 \strokec4 :\cb1 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb3     main()\cb1 \
\
}